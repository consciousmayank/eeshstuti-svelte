<script>
	import { onMount } from 'svelte';

	// Define types to match your Prisma models
	interface Deity {
		id: string;
		name: string;
		description?: string;
		images?: Image[];
	}

	interface Prayer {
		id: string;
		name: string;
		content: string;
		type: string;
		translation?: string;
		audioUrl?: string;
		deityId: string;
		deity: Deity;
	}

	interface Image {
		id: string;
		url: string;
		description?: string;
		deityId: string;
	}

	interface OccasionDeity {
		id: string;
		occasionId: string;
		deityId: string;
		deity: Deity;
	}

	interface Occasion {
		id: string;
		name: string;
		description?: string;
		story?: string;
		date?: string;
		deities: OccasionDeity[];
	}

	let activeTab = 'deities';
	let deities: Deity[] = [];
	let prayers: Prayer[] = [];
	let occasions: Occasion[] = [];
	let loading = true;
	let error: string | null = null;

	// Form states
	let newDeity = { name: '', description: '' };
	let newPrayer = { name: '', content: '', type: 'mantra', translation: '', deityId: '' };
	
	async function fetchData() {
		try {
			loading = true;
			
			// Fetch deities
			const deitiesResponse = await fetch('/api/deities');
			if (!deitiesResponse.ok) throw new Error('Failed to load deities');
			deities = await deitiesResponse.json();
			
			// Fetch prayers
			const prayersResponse = await fetch('/api/prayers');
			if (!prayersResponse.ok) throw new Error('Failed to load prayers');
			prayers = await prayersResponse.json();
			
			// Fetch occasions
			const occasionsResponse = await fetch('/api/occasions');
			if (!occasionsResponse.ok) throw new Error('Failed to load occasions');
			occasions = await occasionsResponse.json();
			
			loading = false;
		} catch (e: unknown) {
			console.error('Error fetching data:', e);
			error = e instanceof Error ? e.message : 'Unknown error';
			loading = false;
		}
	}
	
	// Create new deity
	async function createDeity() {
		try {
			const response = await fetch('/api/deities', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(newDeity)
			});
			
			if (!response.ok) throw new Error('Failed to create deity');
			
			// Reset form and refresh data
			newDeity = { name: '', description: '' };
			await fetchData();
		} catch (e: unknown) {
			console.error('Error creating deity:', e);
			error = e instanceof Error ? e.message : 'Unknown error';
		}
	}
	
	// Create new prayer
	async function createPrayer() {
		try {
			const response = await fetch('/api/prayers', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(newPrayer)
			});
			
			if (!response.ok) throw new Error('Failed to create prayer');
			
			// Reset form and refresh data
			newPrayer = { name: '', content: '', type: 'mantra', translation: '', deityId: '' };
			await fetchData();
		} catch (e: unknown) {
			console.error('Error creating prayer:', e);
			error = e instanceof Error ? e.message : 'Unknown error';
		}
	}
	
	onMount(fetchData);
</script>

<svelte:head>
	<title>Admin Dashboard | Eesh-Stuti</title>
</svelte:head>

<div class="min-h-screen bg-gray-100">
	<header class="bg-white shadow">
		<div class="container mx-auto px-4 py-6">
			<h1 class="text-2xl font-bold text-gray-800">Eesh-Stuti Admin</h1>
		</div>
	</header>

	<main class="container mx-auto px-4 py-8">
		{#if error}
			<div class="mb-6 rounded-md bg-red-100 p-4 text-red-700">
				<p>{error}</p>
			</div>
		{/if}
		
		<div class="mb-6 flex space-x-4 border-b border-gray-200">
			<button
				class={`pb-3 px-4 ${activeTab === 'deities' ? 'border-b-2 border-red-600 text-red-600 font-medium' : 'text-gray-600 hover:text-red-600'}`}
				on:click={() => (activeTab = 'deities')}
			>
				Deities
			</button>
			<button
				class={`pb-3 px-4 ${activeTab === 'prayers' ? 'border-b-2 border-red-600 text-red-600 font-medium' : 'text-gray-600 hover:text-red-600'}`}
				on:click={() => (activeTab = 'prayers')}
			>
				Prayers
			</button>
			<button
				class={`pb-3 px-4 ${activeTab === 'occasions' ? 'border-b-2 border-red-600 text-red-600 font-medium' : 'text-gray-600 hover:text-red-600'}`}
				on:click={() => (activeTab = 'occasions')}
			>
				Occasions
			</button>
		</div>
		
		{#if loading}
			<div class="flex items-center justify-center py-12">
				<div class="h-8 w-8 animate-spin rounded-full border-2 border-red-600 border-t-transparent"></div>
				<span class="ml-2 text-gray-600">Loading...</span>
			</div>
		{:else}
			<!-- Deities Tab -->
			{#if activeTab === 'deities'}
				<div class="mb-8">
					<h2 class="mb-4 text-xl font-bold text-gray-800">Add New Deity</h2>
					<form on:submit|preventDefault={createDeity} class="mb-6 rounded-lg bg-white p-6 shadow-md">
						<div class="mb-4">
							<label for="name" class="mb-2 block text-sm font-medium text-gray-700">Name</label>
							<input
								type="text"
								id="name"
								bind:value={newDeity.name}
								required
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							/>
						</div>
						<div class="mb-4">
							<label for="description" class="mb-2 block text-sm font-medium text-gray-700"
								>Description</label
							>
							<textarea
								id="description"
								bind:value={newDeity.description}
								rows="3"
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							></textarea>
						</div>
						<button
							type="submit"
							class="rounded-md bg-red-600 px-4 py-2 text-white hover:bg-red-700 focus:outline-none"
							>Add Deity</button
						>
					</form>

					<h2 class="mb-4 text-xl font-bold text-gray-800">Existing Deities</h2>
					<div class="overflow-x-auto rounded-lg bg-white shadow-md">
						<table class="min-w-full">
							<thead class="border-b bg-gray-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">ID</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">Name</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Description
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Actions
									</th>
								</tr>
							</thead>
							<tbody class="divide-y divide-gray-200">
								{#each deities as deity}
									<tr class="hover:bg-gray-50">
										<td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">{deity.id}</td>
										<td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-800">
											{deity.name}
										</td>
										<td class="px-6 py-4 text-sm text-gray-500">
											{deity.description || 'No description'}
										</td>
										<td class="flex gap-2 whitespace-nowrap px-6 py-4 text-sm">
											<a
												href={`/admin/deities/${deity.id}`}
												class="text-blue-600 hover:text-blue-800 hover:underline"
												>Edit</a
											>
										</td>
									</tr>
								{:else}
									<tr>
										<td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">
											No deities found
										</td>
									</tr>
								{/each}
							</tbody>
						</table>
					</div>
				</div>
			{/if}

			<!-- Prayers Tab -->
			{#if activeTab === 'prayers'}
				<div class="mb-8">
					<h2 class="mb-4 text-xl font-bold text-gray-800">Add New Prayer</h2>
					<form on:submit|preventDefault={createPrayer} class="mb-6 rounded-lg bg-white p-6 shadow-md">
						<div class="mb-4">
							<label for="prayerName" class="mb-2 block text-sm font-medium text-gray-700">Name</label>
							<input
								type="text"
								id="prayerName"
								bind:value={newPrayer.name}
								required
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							/>
						</div>
						<div class="mb-4">
							<label for="prayerType" class="mb-2 block text-sm font-medium text-gray-700">Type</label>
							<select
								id="prayerType"
								bind:value={newPrayer.type}
								required
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							>
								<option value="mantra">Mantra</option>
								<option value="stotram">Stotram</option>
								<option value="prayer">Prayer</option>
								<option value="ashtakam">Ashtakam</option>
							</select>
						</div>
						<div class="mb-4">
							<label for="prayerContent" class="mb-2 block text-sm font-medium text-gray-700"
								>Content</label
							>
							<textarea
								id="prayerContent"
								bind:value={newPrayer.content}
								rows="5"
								required
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							></textarea>
						</div>
						<div class="mb-4">
							<label for="prayerTranslation" class="mb-2 block text-sm font-medium text-gray-700"
								>Translation</label
							>
							<textarea
								id="prayerTranslation"
								bind:value={newPrayer.translation}
								rows="3"
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							></textarea>
						</div>
						<div class="mb-4">
							<label for="prayerDeity" class="mb-2 block text-sm font-medium text-gray-700"
								>Deity</label
							>
							<select
								id="prayerDeity"
								bind:value={newPrayer.deityId}
								required
								class="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-red-500 focus:outline-none"
							>
								<option value="">Select a deity</option>
								{#each deities as deity}
									<option value={deity.id}>{deity.name}</option>
								{/each}
							</select>
						</div>
						<button
							type="submit"
							class="rounded-md bg-red-600 px-4 py-2 text-white hover:bg-red-700 focus:outline-none"
							>Add Prayer</button
						>
					</form>

					<h2 class="mb-4 text-xl font-bold text-gray-800">Existing Prayers</h2>
					<div class="overflow-x-auto rounded-lg bg-white shadow-md">
						<table class="min-w-full">
							<thead class="border-b bg-gray-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">Name</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">Type</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Deity
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Actions
									</th>
								</tr>
							</thead>
							<tbody class="divide-y divide-gray-200">
								{#each prayers as prayer}
									<tr class="hover:bg-gray-50">
										<td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-800">
											{prayer.name}
										</td>
										<td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
											{prayer.type}
										</td>
										<td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
											{prayer.deity.name}
										</td>
										<td class="flex gap-2 whitespace-nowrap px-6 py-4 text-sm">
											<a
												href={`/admin/prayers/${prayer.id}`}
												class="text-blue-600 hover:text-blue-800 hover:underline"
												>Edit</a
											>
										</td>
									</tr>
								{:else}
									<tr>
										<td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">
											No prayers found
										</td>
									</tr>
								{/each}
							</tbody>
						</table>
					</div>
				</div>
			{/if}

			<!-- Occasions Tab -->
			{#if activeTab === 'occasions'}
				<div class="mb-8">
					<h2 class="mb-4 text-xl font-bold text-gray-800">Occasions</h2>
					<div class="overflow-x-auto rounded-lg bg-white shadow-md">
						<table class="min-w-full">
							<thead class="border-b bg-gray-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">Name</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">Date</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Deities
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium uppercase text-gray-500">
										Actions
									</th>
								</tr>
							</thead>
							<tbody class="divide-y divide-gray-200">
								{#each occasions as occasion}
									<tr class="hover:bg-gray-50">
										<td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-800">
											{occasion.name}
										</td>
										<td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
											{occasion.date || 'N/A'}
										</td>
										<td class="px-6 py-4 text-sm text-gray-500">
											{occasion.deities.map((od: OccasionDeity) => od.deity.name).join(', ') || 'None'}
										</td>
										<td class="flex gap-2 whitespace-nowrap px-6 py-4 text-sm">
											<a
												href={`/admin/occasions/${occasion.id}`}
												class="text-blue-600 hover:text-blue-800 hover:underline"
												>Edit</a
											>
										</td>
									</tr>
								{:else}
									<tr>
										<td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">
											No occasions found
										</td>
									</tr>
								{/each}
							</tbody>
						</table>
					</div>
				</div>
			{/if}
		{/if}
	</main>
</div> 